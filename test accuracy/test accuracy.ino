#define   TOTAL_SAMPLE_NUM 100
#define MAX_FEATURE_NUM 64
const int8_t rawData[TOTAL_SAMPLE_NUM][64] PROGMEM= {
{1,3,8,5,-6,-2,13,3,2,14,8,10,8,-9,-22,-4,3,1,1,-2,3,1,4,0,1,-2,-1,1,2,1,1,1,1,2,2,0,1,2,2,1,1,0,1,2,-1,0,2,1,1,2,1,1,1,0,1,1,0,0,1,1,1,1,1,1},
{1,9,11,6,1,-9,11,17,14,27,25,-4,-49,-26,8,10,11,7,-11,3,2,10,-4,-3,-10,5,1,3,-2,1,1,2,2,-2,0,0,2,2,2,0,-1,-1,1,1,-2,1,0,3,1,1,0,0,0,1,0,0,1,0,1,1,1,1,1,0},
{1,-7,18,8,14,7,2,16,42,22,-1,-64,-33,8,8,20,5,-3,1,1,14,-4,-3,-13,5,2,1,2,0,0,4,2,-3,0,0,2,2,1,1,-2,-1,2,0,-1,1,0,2,1,1,-2,0,-1,1,-1,0,0,0,0,0,1,1,0,0,0},
{0,2,7,0,0,1,-1,-1,-6,-8,-2,0,-1,0,0,2,4,3,2,0,-1,-4,-4,-4,-3,-3,-3,-3,-1,-1,0,-1,-2,-1,0,0,0,0,0,1,0,-1,-2,-1,0,-1,0,0,0,0,0,0,0,-1,-1,-1,0,1,1,1,1,1,1,0},
{0,12,6,8,4,-3,-7,-7,-12,-14,-6,0,1,2,10,9,5,5,2,-2,-6,-3,-2,-4,-5,-3,0,-1,1,2,0,-2,-1,2,2,2,2,1,0,0,0,-2,-5,-4,-2,-1,-1,1,2,3,1,0,-1,0,-1,-1,1,2,0,0,1,1,1,0},
{0,5,11,17,8,3,-5,-9,-9,-14,-20,-12,-7,1,7,11,16,12,3,3,2,-1,-5,-3,-7,-9,-11,-5,2,1,0,1,-3,-2,3,5,5,3,2,1,0,1,1,-4,-7,-5,-4,-4,0,2,2,1,0,1,3,2,2,1,0,1,1,1,0,-1},
{0,-8,3,11,10,1,0,-5,0,-2,-3,-8,-8,-6,-2,2,4,4,3,3,2,2,1,0,-2,-4,-6,-6,-4,-1,2,1,-1,-2,0,3,2,2,2,1,0,0,-1,-1,-2,-3,-3,-3,-1,0,1,0,0,0,1,1,1,1,1,0,-1,0,1,1},
{0,2,2,2,-10,-1,-4,-7,8,4,-5,13,9,2,3,-3,-8,-12,-3,-2,-1,0,-7,1,1,5,10,2,1,1,-3,-5,0,-2,-3,-8,-8,-4,-1,1,2,2,1,0,3,2,2,3,0,-4,-4,-3,-4,-3,-1,0,-1,-2,0,1,1,3,2,0},
{1,-4,-10,-8,0,5,7,2,2,2,3,-12,5,7,2,7,1,-20,-9,7,8,1,-4,-1,2,3,-1,0,0,-1,0,2,1,0,1,1,2,1,0,0,0,1,1,1,0,0,1,0,0,1,-1,0,1,0,-1,0,0,0,1,0,0,0,0,0},
{1,1,2,4,11,2,4,-5,1,0,19,29,26,22,-35,-37,-9,-2,17,21,0,-8,-7,7,4,2,-6,-5,2,4,1,1,1,2,2,1,0,-1,2,1,3,1,0,0,1,0,0,2,1,2,1,1,0,0,0,1,1,0,1,1,1,0,1,1},
{0,-3,-10,5,3,29,25,7,8,-6,2,2,1,-6,-9,-13,-14,-12,1,9,9,10,8,2,0,3,1,-5,-6,-6,-7,-9,-3,4,2,-2,-4,-4,-1,0,2,4,2,0,1,1,0,0,-1,-3,-6,-5,-1,2,2,1,0,-1,-1,1,3,2,0,-1},
{1,15,45,77,12,-90,-78,53,20,-20,10,17,12,-7,0,0,-3,-19,9,1,-2,-5,-3,-4,6,0,-3,-5,-2,2,1,2,1,-3,-2,2,-3,-4,-1,2,5,1,-2,-1,-1,1,2,-1,-3,1,1,0,0,1,1,1,-1,-1,1,1,1,1,0,-1},
{0,-11,-39,10,33,20,5,9,-10,-15,2,1,-24,-23,-8,4,1,5,15,7,1,1,3,1,-3,-5,1,-6,-11,-4,0,0,-2,0,-2,-3,0,3,4,2,-1,-1,0,1,1,-3,-4,-2,1,-2,-1,2,2,0,-2,-2,1,1,1,2,1,-1,1,3},
{0,6,8,8,3,2,3,-5,12,1,3,-9,1,-1,0,6,-5,-1,-5,-4,2,10,9,9,4,0,3,2,1,-1,-4,-9,-9,-5,0,4,3,1,-3,-3,2,3,2,2,0,0,2,2,3,1,-3,-5,-6,-4,-2,-1,2,2,-1,1,3,3,3,2},
{1,4,0,2,2,-2,1,3,-6,2,1,2,3,-3,-6,2,3,1,-2,2,1,2,1,1,1,2,0,1,2,0,1,1,1,2,0,0,1,0,0,1,1,1,1,1,0,1,0,0,1,1,0,1,1,1,1,1,0,1,1,0,0,0,0,0},
{1,7,-7,-9,3,1,4,8,20,25,-7,-47,-27,24,22,-7,-9,-1,14,4,-11,-4,3,-1,-2,7,1,-6,3,2,-1,3,-2,-2,3,0,1,3,1,-2,0,1,-1,0,1,2,2,1,-2,0,1,1,0,0,0,0,1,0,0,1,1,0,0,0},
{1,1,-6,0,18,48,43,2,-52,-48,-24,21,29,10,-16,-7,17,12,-14,-13,0,3,0,3,1,0,0,3,2,0,-3,-2,1,2,2,2,0,-2,-1,0,-2,-2,2,2,1,1,-3,-2,0,1,-1,0,0,0,1,1,1,1,1,0,-1,-1,1,1},
{1,9,18,22,5,45,-8,-28,-23,-20,-2,12,23,5,-10,0,3,3,-7,-11,3,2,1,3,1,0,2,0,0,1,-1,-1,2,2,1,0,-1,-2,-1,0,-1,0,3,0,2,1,-3,0,-1,0,0,1,0,1,2,1,1,2,0,0,0,-1,0,1},
{0,4,8,5,2,0,-3,-5,-9,-9,-6,-2,2,3,3,7,4,1,1,-3,-4,-4,-5,-3,-1,0,1,1,1,1,-1,-3,-3,-2,-1,1,1,1,3,2,1,0,-1,-2,-2,-2,-1,1,2,2,0,-1,-1,-1,-1,0,1,1,1,1,1,1,0,-1},
{0,1,-4,0,0,-1,-2,3,-4,-2,-1,-5,-10,-4,7,7,3,-1,-8,-8,1,-2,-7,-5,-4,-1,1,3,5,4,0,1,2,-2,-1,2,-3,-5,-5,-3,-1,-1,-1,1,1,-2,1,3,1,1,2,-1,-2,-1,0,-1,-1,-1,-1,-2,-2,0,1,1},
{1,-7,2,-1,0,17,9,45,24,-39,-66,-19,45,23,-20,-11,19,27,-16,-17,0,0,0,10,5,-4,0,4,2,-1,-1,-4,2,0,1,2,2,-1,-2,1,0,-1,-3,3,2,3,-1,-2,1,1,-1,0,0,0,2,0,0,1,2,1,-1,-1,0,2},
{1,-1,4,11,1,-9,-3,7,25,43,14,-40,-51,-14,27,25,0,-12,0,16,1,-13,-10,0,2,1,2,0,-3,2,0,2,-2,-5,1,2,1,1,1,-1,-3,0,0,-2,-1,2,2,1,0,-3,-1,1,1,0,0,0,1,0,0,1,1,1,-1,-1},
{1,4,16,2,19,23,-3,-51,-40,1,28,15,-10,-13,6,15,-8,-6,-4,0,0,2,4,-2,-2,2,3,1,-2,-4,2,1,1,2,1,-3,-1,1,-1,-2,1,2,1,1,-2,-2,0,1,0,0,0,0,1,0,0,0,1,0,-1,-1,0,1,1,0},
{1,7,12,11,4,4,4,44,16,-54,-44,2,22,23,5,-10,-3,8,4,-9,-6,0,2,4,2,1,-1,1,1,0,-2,-2,0,2,1,2,0,-3,-2,0,-1,-3,1,2,2,0,-2,-3,-1,0,1,0,-1,1,0,0,0,1,0,0,-1,-1,0,1},
{0,4,12,7,-8,5,15,8,1,3,0,-4,-10,-19,-16,-14,-9,0,7,9,8,8,3,0,1,1,-3,-6,-6,-7,-9,-6,-1,2,-2,-3,-1,-1,1,5,6,0,-1,0,1,0,-1,-1,-2,-4,-4,-2,0,0,-2,-1,0,0,1,1,1,0,0,1},
{1,8,11,-5,7,18,37,5,-41,-33,7,12,12,7,3,-6,-9,1,1,-3,-5,2,9,-2,2,0,-3,1,1,0,-1,-1,1,0,2,0,-2,0,1,-2,1,1,1,1,0,-2,-2,-1,-1,1,-1,0,1,0,0,0,1,0,0,-1,-1,0,0,1},
{1,2,20,7,-9,-8,14,20,27,35,-12,-49,-38,2,28,6,-11,-6,11,10,-2,-9,-9,-1,2,3,0,0,-1,1,1,0,-2,-3,-1,1,1,1,1,-1,-2,0,0,-2,1,2,1,0,-1,-1,-1,1,0,0,-1,0,0,1,0,1,1,0,-1,0},
{0,-2,-2,0,1,-1,1,3,-2,-3,-5,10,-9,5,8,4,-2,-9,-4,-2,-5,-6,2,4,7,0,-2,0,-1,-3,-3,-1,-1,0,-1,-2,1,0,-1,-2,-1,-4,-3,-1,-1,0,-2,-2,0,-2,-3,2,1,-1,-2,-1,1,1,-1,-2,-2,-2,-1,0},
{0,-2,3,-11,6,17,9,3,2,1,-3,-5,-6,-6,-10,-10,-6,-3,-1,3,7,7,3,1,0,0,0,-1,-2,-4,-5,-4,-4,-3,1,1,-2,-3,0,2,2,2,1,0,0,1,1,0,-1,-1,-2,-3,-2,-1,0,0,0,0,1,2,2,1,0,1},
{1,-1,-6,-10,-8,20,31,-25,-52,-6,30,-1,-12,9,-1,-3,9,1,-3,-6,-3,4,1,-2,0,1,-1,1,1,-2,-2,1,0,-1,1,0,-4,1,1,-2,-1,-1,2,0,-1,-1,0,0,1,0,-1,0,1,0,-1,0,1,1,-1,-1,0,0,0,1},
{1,3,-2,-33,3,37,30,-16,-60,-21,20,16,-1,-6,-2,6,4,-3,-6,-5,-4,2,4,0,-3,0,1,1,-1,-2,-2,-1,0,1,0,-1,-3,-1,1,-1,-2,1,1,1,0,-3,-1,-1,0,0,0,0,0,0,0,0,1,1,0,-1,-1,0,1,0},
{0,-7,1,2,-1,0,-2,13,-8,-4,3,7,-2,-3,1,2,-1,0,-4,-4,-5,-4,0,0,1,2,-1,1,2,-1,-2,0,-2,-3,-5,-3,0,1,0,0,1,-2,-1,2,0,-1,1,0,0,-1,-1,0,-1,-2,-2,-1,-1,0,0,0,0,-1,-1,-1},
{0,3,24,9,18,10,5,-5,-10,-19,-26,-21,-12,2,7,12,5,15,14,11,1,-1,-4,-6,-8,-8,-12,-12,-9,0,4,-2,-4,-1,-1,4,7,11,5,0,2,1,1,-1,-5,-6,-9,-8,-2,1,2,2,2,1,-2,2,6,3,1,1,1,1,1,3},
{1,3,5,2,3,2,-8,0,7,3,6,8,3,6,6,-12,-7,-8,-9,3,9,6,-5,-2,0,5,1,-5,-2,1,2,0,1,0,1,0,1,1,-1,0,2,1,0,1,0,-1,0,0,0,1,2,1,1,1,0,0,0,0,0,0,0,1,1,0},
{0,1,-13,-1,-1,-3,-12,3,3,8,-3,3,1,5,4,5,-4,-5,-5,-4,-9,-6,-3,3,4,3,5,0,0,-5,-2,1,-1,0,1,-4,-2,1,-3,-1,0,-4,-4,-4,-1,1,1,1,1,1,0,1,2,-1,-1,0,-2,-1,-1,-1,1,-1,-3,-2},
{1,2,-5,0,-2,14,9,-18,-32,-1,14,14,-3,-11,5,8,-4,-7,2,0,-1,3,1,-3,2,1,0,1,0,-2,1,2,0,1,3,0,-1,2,1,0,1,0,1,1,-1,-2,-1,1,1,0,0,1,1,0,0,0,1,1,0,-1,0,0,0,1},
{1,6,7,40,35,-18,-59,-31,36,15,5,-9,-7,17,2,-10,0,-4,-8,2,5,0,-2,1,-2,1,0,-3,-2,1,0,2,1,0,-3,0,1,0,-1,1,1,1,1,-2,-2,0,0,1,-1,0,1,0,0,1,1,1,-1,-1,-1,0,1,1,1,0},
{1,3,4,-1,-4,-4,1,9,12,21,7,-35,-28,-4,8,14,8,-3,-2,2,-4,-1,1,-4,0,2,2,0,1,0,0,1,0,-1,0,0,1,2,1,-1,-1,0,0,-1,1,2,1,0,-1,-1,-1,0,1,0,0,1,1,0,1,1,1,0,0,0},
{1,13,9,-2,1,2,5,10,10,33,7,-34,-35,3,15,16,2,-8,1,6,-5,-1,0,-2,-3,5,1,-1,2,1,0,1,-1,-3,0,1,1,2,1,-1,-2,1,0,-2,-1,1,2,1,-1,-2,-1,0,1,0,-1,1,1,0,0,0,0,0,-1,-1},
{1,15,33,24,-9,-42,-19,20,11,-5,-2,1,3,1,0,-1,-1,-4,2,4,-3,-1,1,0,0,0,-3,-2,1,0,0,2,0,-2,0,1,-2,-1,0,2,1,0,-2,0,0,0,0,-1,0,0,0,0,0,0,1,0,-1,0,0,0,0,0,0,0},
{1,-10,0,5,0,-7,0,9,22,27,-4,-30,-21,10,13,14,-2,-8,2,5,1,-4,-3,-7,4,5,-2,1,1,-1,1,2,-2,-2,1,1,0,2,0,-2,1,1,-2,-1,0,1,2,0,-1,-1,0,0,1,-1,-1,1,0,0,0,0,0,0,-1,-1},
{0,3,3,-9,-3,-4,5,-2,-11,2,-7,-4,-5,4,-3,-4,-8,-14,-10,-8,-4,-3,-3,3,6,7,6,4,2,1,-3,-2,-2,-4,-7,-10,-9,-4,-3,-1,-1,0,1,1,4,5,3,1,0,-1,-4,-2,-2,-3,-4,-3,-2,-1,1,1,0,0,2,2},
{1,3,7,2,-6,-9,0,3,0,-1,2,2,16,20,12,-24,-32,-4,16,6,-7,-5,6,5,0,-8,2,-1,-4,4,1,-1,0,2,0,2,0,-3,1,1,1,2,1,0,-1,0,0,-1,-1,2,2,1,-1,-1,0,1,1,0,-1,0,1,0,0,0},
{0,7,2,-2,2,-1,-1,-5,-6,-7,-8,-3,3,3,3,2,6,0,1,0,-1,-3,-3,-6,-5,-4,-1,0,2,2,1,0,1,2,1,-1,-1,0,0,-1,-1,0,0,-1,-1,-1,-1,-2,-1,0,0,-1,-1,0,1,0,0,0,0,1,2,0,0,0},
{1,-5,-7,0,-2,2,0,-1,2,-4,2,3,6,10,-10,-14,13,-3,-7,7,3,1,-3,0,0,3,-4,-1,3,0,-3,3,0,1,2,0,-1,0,2,-1,1,1,-1,-1,2,-1,-2,1,0,1,2,-1,-1,1,0,1,1,-1,1,1,0,0,1,1},
{1,8,2,1,-1,-6,-1,5,5,7,2,10,1,-6,-15,-9,-2,11,2,-2,-4,2,3,0,-2,-4,1,2,1,0,-1,1,2,1,-1,-1,0,2,1,0,2,1,-1,-1,0,0,0,1,1,0,1,0,0,0,1,0,0,0,0,1,1,0,0,0},
{0,-5,3,7,-15,13,10,25,17,11,2,-5,-8,-8,-13,-15,-21,-12,-6,-2,10,14,18,11,2,-1,2,3,0,-9,-15,-14,-13,-9,-2,4,2,-5,-4,-2,6,10,8,2,-2,-3,-1,0,0,-3,-6,-7,-7,-1,2,3,2,2,-1,-2,2,5,3,2},
{1,4,3,4,4,5,4,5,3,3,3,3,2,4,4,2,2,2,3,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{0,3,-1,2,1,-4,-2,6,-8,1,-11,-5,3,4,-6,-1,2,-1,2,-1,-1,2,0,1,1,2,1,1,2,1,1,0,1,2,0,0,2,0,1,1,1,1,1,1,0,1,2,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0},
{1,1,6,13,3,3,6,-2,-4,2,1,1,-2,-7,2,6,-2,-4,3,1,0,1,0,2,0,1,2,1,2,2,2,1,2,1,0,2,1,0,1,1,0,1,2,1,1,1,0,0,1,0,1,1,0,1,1,1,1,1,0,1,1,0,0,0},
{1,-2,0,0,-1,2,1,1,-1,6,2,-5,1,7,2,3,7,3,2,8,0,-20,-2,10,3,1,-3,-1,3,3,-5,-1,2,0,2,0,2,1,2,0,1,1,0,0,1,2,1,0,0,1,-1,0,2,0,1,1,1,0,0,1,0,1,1,0},
{1,-2,2,10,41,0,-51,-27,20,18,-7,-8,2,12,-1,-6,-1,3,-7,2,6,-3,-2,2,2,1,-1,-2,0,-1,0,2,3,0,-1,-1,1,1,-2,-2,2,2,1,-1,-1,1,0,2,0,-1,1,1,-1,0,1,1,0,-1,0,1,1,1,1,0},
{0,1,-2,1,0,-1,11,-10,1,0,-5,-10,-3,-7,6,-3,-5,7,-2,-2,1,9,1,2,1,0,-2,-5,-5,-4,-3,-3,-2,2,2,1,2,1,1,1,0,-2,-4,-6,-4,-2,-3,-2,-1,-1,-1,1,1,1,0,1,1,0,-1,0,-1,-1,-1,-2},
{0,-3,15,2,18,17,20,15,10,2,-12,-22,-27,-20,-18,-16,-2,1,10,10,15,11,6,0,3,15,-5,-17,-11,-14,-18,-6,-3,-4,-6,-4,4,0,4,10,8,2,0,-2,1,1,-3,-5,-6,-7,-14,-5,5,1,-3,-2,1,-1,3,11,7,-1,-2,3},
{0,7,6,12,16,13,7,4,1,-13,-29,-22,-10,-12,-2,10,11,1,7,6,7,1,1,2,-9,-10,1,-4,-6,-6,-2,-3,-7,-7,0,0,2,4,7,5,1,2,1,0,0,-4,-4,-6,-5,0,2,2,2,-1,-2,-2,1,2,2,1,0,1,1,4},
{0,-7,-8,-5,5,8,34,35,8,10,4,2,-23,-32,-30,-18,0,-4,15,15,14,4,10,9,-1,-2,-6,-8,-7,-5,0,-7,-2,-1,1,-2,-7,-4,0,-2,1,8,3,1,1,-1,1,2,1,-4,-8,-5,1,2,0,1,2,0,0,-1,3,3,1,0},
{0,7,3,21,8,9,2,-10,-5,-20,-17,-11,-8,-7,2,7,4,6,5,7,0,0,2,1,-3,-3,-3,-8,-7,-3,0,-4,-5,-2,1,2,3,8,6,1,0,1,0,0,-1,-2,-4,-5,-1,2,2,-1,-2,-2,-1,1,2,3,1,0,2,2,2,1},
{0,-23,-22,-15,6,12,18,16,17,0,-3,-20,-27,-22,-25,-14,3,2,13,11,19,21,14,0,2,0,-8,-12,-12,-22,-21,-21,-6,4,-1,0,1,0,7,12,14,15,0,-8,-2,-1,0,-6,-7,-11,-13,-8,-3,4,4,1,2,1,4,5,5,4,2,0},
{0,0,2,-2,-2,1,1,3,-5,-8,-11,4,1,-3,-7,13,6,2,-1,-6,-11,-9,1,-4,-11,-6,0,2,0,6,9,6,-2,0,1,-3,-5,0,-7,-10,-9,-4,0,-1,0,2,1,1,1,2,1,1,-2,-6,-3,0,-3,-2,-3,-2,-3,-4,-1,-1},
{1,-4,2,7,-1,40,19,-26,-51,-13,33,12,-16,-4,12,9,-10,-12,3,-1,-4,0,4,-5,-1,1,0,0,-1,-3,0,1,-1,1,1,-1,-3,2,1,-1,-2,3,2,0,-2,-3,0,1,-1,-1,-1,0,1,1,-1,0,1,0,-1,-1,0,0,1,0},
{0,-9,-7,-7,-12,-3,3,2,9,4,1,-6,-9,-12,-13,-15,-10,0,0,2,6,8,5,8,2,-1,-2,-2,-2,-6,-8,-9,-7,-6,-3,2,1,-2,2,2,2,3,3,1,0,0,2,1,-3,-4,-3,-3,-2,0,0,1,1,2,3,1,1,0,0,0},
{0,6,8,17,14,7,-4,-3,-7,-14,-19,-17,-5,3,0,2,3,10,9,9,3,-1,-4,-4,-3,-4,-6,-8,-9,-6,-3,0,0,0,2,3,2,5,6,1,0,1,0,-2,-3,-1,-1,-4,-3,0,2,1,1,2,3,1,2,1,0,2,2,1,1,0},
{1,-2,4,1,10,5,-1,-1,0,15,39,-10,-51,-25,36,13,-12,7,5,3,-6,0,6,-1,-8,3,2,1,-5,1,2,1,1,-1,0,2,1,0,4,1,-1,0,3,0,-1,2,2,0,0,-2,1,1,1,1,0,0,2,1,1,1,1,2,1,0},
{0,-4,7,9,3,1,13,8,4,-2,-11,-14,-16,-14,1,4,0,1,5,10,10,9,2,-3,-7,-6,-3,-4,-5,-7,-7,-6,-3,2,2,1,1,2,1,5,4,1,0,0,-1,-3,-3,-2,-2,-3,-2,0,1,1,2,2,3,3,3,3,2,2,3,1},
{1,8,-3,-2,1,-5,15,20,37,0,-42,-40,11,13,11,8,-14,0,12,-6,-11,-2,3,3,4,-4,-2,3,0,-1,1,-3,-3,2,2,-1,1,1,-3,-1,3,-1,-2,1,1,0,0,-2,-2,0,1,1,0,0,1,1,0,1,1,1,0,-1,0,0},
{1,11,-7,3,7,-2,7,29,8,5,-20,-33,-5,12,4,2,-1,-2,1,7,-5,-4,-2,-2,2,0,1,0,3,0,0,1,-1,0,1,2,2,1,0,0,0,-1,0,1,1,2,0,-1,0,1,0,0,1,0,0,1,0,1,1,1,0,1,0,0},
{1,2,13,27,18,-16,-39,-20,16,15,6,1,-5,2,4,-4,-6,-5,-3,3,1,0,1,0,0,3,1,-3,1,1,1,2,0,-1,-2,0,-1,-1,-1,0,2,1,0,-1,-1,0,1,1,0,0,1,1,0,1,1,0,0,0,0,1,1,1,1,0},
{0,-9,4,5,2,-3,1,-4,-5,-8,-7,-7,-7,-1,0,-1,1,4,3,5,4,3,0,-3,-3,-4,-5,-6,-6,-4,-2,-4,-1,-2,-1,1,2,2,4,1,0,0,0,-2,-3,-3,-3,-2,-1,-1,-1,-1,0,1,2,1,1,1,2,1,1,1,0,-1},
{0,6,-2,-11,0,3,26,20,17,17,2,-7,-11,-16,-27,-20,-10,0,-1,2,9,18,20,14,6,0,-2,1,-7,-11,-12,-15,-17,-11,1,-1,-3,1,0,2,7,11,13,8,-2,-2,1,-2,-4,-7,-6,-8,-8,-3,2,2,2,0,1,2,5,6,6,4},
{1,-4,-5,3,0,5,27,23,-3,-43,-27,8,16,9,-2,-3,-3,10,0,-5,-7,-2,5,1,0,-2,2,0,1,0,-2,-1,0,1,2,2,1,-1,-1,1,0,-2,2,0,0,1,-1,-2,0,1,1,0,-1,0,1,0,0,1,1,0,-1,0,0,0},
{0,9,3,12,10,8,6,2,-3,-15,-22,-13,-12,-1,3,7,6,7,7,7,6,1,-1,-2,-7,-8,-6,-5,-3,-1,0,-3,-2,-1,1,1,3,3,3,2,1,0,0,0,-2,-4,-5,-5,-3,0,2,1,1,1,2,1,1,1,0,0,2,1,2,1},
{1,4,19,41,11,-21,-44,-19,24,17,-6,-6,2,10,1,-8,-4,-1,-2,0,2,0,-1,2,1,0,-1,-4,-1,2,0,1,0,-1,-2,1,1,-3,-1,2,1,0,-1,-3,-1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,1,1,0,0,0},
{1,-7,-11,1,1,-2,0,3,1,14,7,-17,-29,-6,12,9,-8,-5,6,7,-5,-5,2,0,-2,2,0,-2,1,2,1,1,-1,-2,0,1,0,2,2,-1,0,1,0,-1,-1,0,1,1,-1,-1,0,0,1,0,0,0,1,1,0,1,1,1,0,0},
{1,11,0,-7,-3,0,3,2,13,22,12,-10,-37,-23,7,20,5,-3,-6,4,4,-2,-6,-5,1,2,1,0,-1,1,1,1,1,-2,-1,0,2,3,0,-2,-2,1,0,-1,-1,2,2,1,0,-2,-1,0,1,0,0,0,1,0,0,0,1,1,0,0},
{1,11,2,1,2,2,2,10,26,12,-31,-25,-12,2,17,10,-6,-5,1,1,-4,-1,-6,-2,2,1,0,0,0,0,0,-1,-1,-1,0,1,1,1,-2,-2,-1,0,-1,-2,1,1,0,-1,-2,-1,0,0,-1,-1,0,0,0,0,0,0,0,0,-1,-1},
{0,8,2,2,4,-6,-1,0,5,-3,-4,2,6,3,1,-10,23,-6,-9,-6,0,3,4,8,-1,1,1,1,2,-2,-2,-3,-4,-2,-1,4,2,-1,0,-2,-1,-1,-2,-2,-1,-1,2,2,0,1,1,-2,-3,-1,-1,-1,1,0,1,1,1,1,0,0},
{1,-1,-4,-10,-9,1,1,-1,3,10,22,26,-25,-38,-18,16,10,-5,-8,7,6,-3,-8,-2,-2,-1,2,1,-2,0,2,1,-1,0,-1,-1,0,1,1,1,1,-1,0,0,-2,-2,1,3,0,-1,-1,-1,0,1,0,-1,0,1,0,0,0,1,0,-1},
{0,-4,3,12,-6,3,1,-1,-1,-12,-12,33,19,8,0,-2,-13,-6,-7,-4,-11,-9,1,4,4,9,9,4,4,1,-1,2,-3,-7,-10,-8,-3,0,1,-1,0,-3,-5,-1,2,4,1,-2,-1,2,1,0,0,-2,-6,-4,-2,0,1,1,2,0,-1,2},
{1,2,2,21,27,11,-25,-33,-9,9,19,-4,-12,2,6,0,-5,-5,-5,1,5,-1,-3,1,-1,0,1,-1,-3,0,1,-1,1,1,-2,-1,1,-1,-2,-1,0,1,1,-1,-1,-1,0,1,-1,0,0,0,0,0,0,0,0,-1,-1,0,0,1,0,0},
{1,6,1,0,-2,22,30,44,-32,-53,-33,19,21,0,-11,-4,10,14,-11,-11,-9,2,2,1,-3,-1,2,0,-1,0,-5,-1,1,2,0,0,0,-2,-2,-1,-2,-1,0,3,0,0,-2,-1,-1,1,-1,-1,0,1,0,0,0,1,1,0,-1,-1,0,1},
{1,-3,3,8,4,0,11,35,31,-5,-47,-38,-3,30,16,-4,-5,1,13,1,-12,-9,2,5,0,1,1,0,2,0,1,-2,-2,0,2,1,0,1,-1,-2,0,-1,-2,0,1,1,2,-1,-2,0,2,1,0,0,1,2,1,0,1,1,1,0,0,0},
{0,1,3,-11,2,0,3,2,2,1,0,3,1,-10,1,-8,-16,-10,9,-3,16,12,3,1,2,1,-11,-9,-3,-4,-6,-6,-3,2,1,5,12,5,-2,0,1,-7,-8,-2,-7,-10,-6,-1,3,1,1,3,1,-1,3,1,1,1,2,-2,-3,-3,-3,-2},
{1,4,-2,0,19,27,32,-9,-51,-38,12,14,6,17,-1,-17,5,8,1,-11,-11,6,1,-4,2,3,-5,0,0,-4,-1,-1,0,1,0,0,-3,-1,-1,-2,-1,1,1,2,-1,0,0,-2,0,0,0,-2,1,0,0,1,1,-1,1,0,-1,1,0,1},
{1,9,5,-15,2,3,3,7,26,15,-7,-40,-25,16,18,0,1,-1,-1,1,2,-6,-8,2,2,2,1,0,1,2,1,0,-1,-1,1,1,3,2,0,-2,1,1,-2,0,2,1,1,1,-2,-1,0,1,0,0,0,1,1,0,1,1,1,0,0,0},
{1,19,12,23,13,-21,-33,-12,20,18,-8,-11,2,14,0,-11,-6,1,0,2,1,1,-1,1,1,1,-1,-3,-1,1,0,1,1,-1,-2,0,0,-1,-1,2,1,0,-1,-2,-1,1,0,-1,-1,-1,0,1,-1,0,0,1,0,-1,0,1,1,0,-1,0},
{1,1,1,1,2,-3,0,2,2,0,-1,2,2,4,21,-3,-30,-9,12,10,0,-9,2,5,2,-8,2,0,-2,1,2,-2,1,2,0,1,1,-1,-1,2,-1,1,1,-1,-1,1,0,-1,0,0,2,1,0,-1,0,0,1,0,-1,0,1,0,0,0},
{1,10,13,-3,-1,17,39,6,-38,-33,-4,19,22,-2,-13,1,10,3,-9,-5,-3,2,1,1,-1,0,1,2,0,-1,-1,-1,1,0,2,1,-2,-1,2,-1,-2,0,1,1,0,-1,-2,0,1,0,-1,0,1,0,0,0,0,1,0,-1,-1,0,1,1},
{0,2,1,-1,4,0,0,-5,-1,-5,0,1,6,-28,-2,19,10,2,5,-2,-6,-10,-11,-10,-10,-5,2,2,1,3,7,5,4,0,1,-3,-5,-2,-4,-7,-4,-5,-4,-2,-1,1,0,1,2,1,1,0,0,0,1,1,-1,-2,-1,-1,0,-1,-3,-2},
{1,-3,6,7,1,-1,9,14,21,13,-13,-35,-16,4,14,11,-1,-3,-1,1,2,1,-9,-3,5,4,-3,0,2,0,0,-1,0,-1,0,2,2,1,0,-2,0,0,-2,1,1,0,0,1,-1,-1,0,0,-1,0,0,0,0,0,1,1,0,0,-1,0},
{0,0,1,-3,6,0,2,-2,-7,0,-34,-37,31,-2,11,12,8,1,-12,-14,-21,-26,-17,-6,5,0,3,15,14,13,9,2,-1,-7,-11,-9,-13,-14,-14,-10,-2,-1,1,2,0,3,5,6,8,5,1,-4,-4,-2,-5,-7,-5,-3,-3,-2,0,1,0,1},
{0,-1,-1,0,-20,9,6,23,6,7,-6,-9,-7,-8,-9,-15,-9,-1,-1,6,13,14,11,4,0,3,0,1,-4,-10,-10,-8,-4,-2,2,0,-2,-2,0,3,8,7,4,-1,-2,0,1,1,-3,-5,-4,-4,-2,2,2,0,1,1,1,2,2,3,0,0},
{1,-8,2,8,1,3,36,37,13,-38,-49,4,31,5,-19,-5,20,0,-7,2,-2,-12,3,2,-1,0,-2,2,1,-3,-1,0,-2,0,1,0,1,1,-3,-1,1,-3,-3,1,2,0,-2,-1,-1,0,1,0,-2,1,1,0,0,0,1,0,-1,-1,0,0},
{1,4,3,3,3,2,5,2,1,1,2,2,2,3,2,2,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,7,3,5,3,4,3,4,4,2,2,2,2,3,3,3,3,3,3,3,4,4,3,3,3,3,3,3,3,2,3,3,3,3},
{0,1,3,1,-1,-1,-10,-2,-14,-4,5,46,33,15,4,7,-5,-9,-4,-16,-15,-17,-4,1,0,10,14,13,1,0,1,-2,-8,-1,-6,-14,-13,-10,-1,2,0,2,-1,-2,1,6,7,3,0,-2,-4,-1,-3,-4,-4,-5,-4,-4,-1,1,1,1,1,1},
{0,-7,5,-1,1,2,5,-23,-10,4,-5,-6,0,1,-2,2,1,-1,-5,-6,0,1,0,0,2,0,-2,0,1,-1,-3,-1,-1,-2,0,1,1,-1,-2,1,1,0,0,0,0,0,0,0,-1,-1,0,0,-1,-1,0,-1,-1,0,1,0,-1,0,0,-1},
{0,14,-7,8,3,-7,14,-1,7,-6,5,1,-2,-5,-9,-9,-7,1,-2,0,3,10,12,6,5,0,-5,-11,-7,-5,-5,-4,-5,-1,1,1,3,2,-1,-2,-2,-2,-1,2,-2,-2,-1,-1,0,0,-1,-4,-5,-1,1,1,0,0,-1,-2,0,1,2,0},
{0,-2,1,-5,13,8,-10,-20,1,-15,-7,-9,0,-1,1,3,1,1,3,2,0,0,0,-3,-3,-2,-2,-2,-2,-3,-1,-2,0,2,1,1,1,1,1,0,0,0,-1,-1,-1,0,0,-2,-1,0,0,0,1,1,1,1,1,1,1,2,2,1,0,0},
{1,4,9,5,4,9,-3,0,0,0,1,20,33,17,-40,-36,-3,8,16,7,-3,-7,1,2,0,-4,-6,4,6,0,-1,1,0,1,1,-1,-1,-1,1,2,1,0,0,-1,-1,-1,-1,0,1,2,0,-2,-1,-1,0,1,0,0,0,0,0,0,1,0},
{0,-9,4,14,-2,-1,-8,-4,-4,-12,-10,-7,-7,-10,-2,2,3,3,4,10,6,1,2,1,-7,-6,-4,-8,-9,-7,-2,-1,-1,0,2,1,0,4,5,2,2,1,0,-1,-2,-4,-5,-5,-3,-1,0,0,0,1,1,1,1,2,2,1,0,1,0,0},
{0,-1,-9,3,2,9,16,24,12,22,4,-6,-12,-23,-36,-38,-23,-12,0,-2,8,15,27,30,10,0,-7,-3,7,-10,-7,-15,-26,-30,-7,10,3,1,1,-7,0,12,19,22,4,-11,-6,0,-3,-5,-5,-11,-16,-14,-2,8,7,4,2,0,1,6,8,7}};


#include <arduinoFFT.h>

float features[MAX_FEATURE_NUM];
double featuresForFFT[MAX_FEATURE_NUM];
int randomClass;

// int sumPos[MAX_FEATURE_NUM];
// int sumNeg[MAX_FEATURE_NUM];

// float uP = 0;
// float uN = 0;

// byte posCount = 0;
// byte negCount = 0;

byte dataset[80][MAX_FEATURE_NUM];
float weights[MAX_FEATURE_NUM];

float score;

// float tNeg;
// float tPos;

float Bias;
int correctOutput = 0;

arduinoFFT fft;

void buildDataset(int featureNum=MAX_FEATURE_NUM){
  // Serial.print("building the dataset");
  for (int j = 0; j < 80; j++) {
    // take the class value as it is
    dataset[j][0] = pgm_read_byte(&rawData[j][0]);

    for (int i = 0; i < featureNum; i++) {
      featuresForFFT[i] = pgm_read_byte(&rawData[j][i+1]); //index 0 is used to store ta class
    }

// perform fft ans store the features
    fft.Windowing(featuresForFFT, featureNum, FFT_WIN_TYP_HAMMING, FFT_FORWARD);
    for (int i = 0; i < featureNum; i++) {

      dataset[j][i + 1] = min(abs(featuresForFFT[i]) * 100, 255);
    }
}}

void train(int featureNum=MAX_FEATURE_NUM, int testSamplesStartingIndex=80) {
  // Serial.print(", training");
int sumPos[MAX_FEATURE_NUM] = {0};

int sumNeg[MAX_FEATURE_NUM] = {0};

float uP = 0;
float uN = 0;

byte posCount = 0;
byte negCount = 0;

float tNeg = 0;
float tPos = 0;  
  for (byte i = 0; i < testSamplesStartingIndex; i++)
  {
    // count N_pos and N_neg
    if (dataset[i][0] == 1) posCount++;
    if (dataset[i][0] == 0) negCount++;

    //    eq 3 and 4
    for (byte j = 1; j < featureNum; j++)
    {

      if (dataset[i][0] == 1)
      {
        sumPos[j] += dataset[i][j];
      }

      if (dataset[i][0] == 0)
      {
        sumNeg[j] += dataset[i][j];
      }
    }
    }

    
  //  eq 5, calculate the weights
  for (byte j = 1; j < featureNum; j++)
  {
    uP = sumPos[j] / posCount;
    uN = sumNeg[j] / negCount;
    if (uP + uN == 0) weights[j] = 0;
    else
      weights[j] = (uP - uN) / (uP + uN);
  }


  //eq 7 and 8
  for (byte ii = 0; ii < testSamplesStartingIndex; ii++)
  {
    score = 0;
    for (byte j = 1; j < featureNum; j++)
    {
      score += weights[j] * dataset[ii][j];
    }
    (dataset[ii][0] == 0) ? tNeg += score : tPos += score;

  }

  //  eq 9
  Bias = (negCount * (tPos / posCount) + posCount * (tNeg / negCount)) / (negCount + posCount);
  // Serial.print("bias");
  // Serial.println(Bias);
  }

void test(int featureNum=MAX_FEATURE_NUM, int testSamplesStartingIndex=80){
Serial.print("test accurecy ");
correctOutput = 0;
for(int testN = 80; testN < TOTAL_SAMPLE_NUM; testN++){
score = 0;
  for (int i = 0; i < featureNum; i++) {
    featuresForFFT[i] = pgm_read_byte(&rawData[testN][i+1]);
  }

  fft.Windowing(featuresForFFT, featureNum, FFT_WIN_TYP_HAMMING, FFT_FORWARD);
  for (int i = 0; i < featureNum; i++) {
    score += weights[i] * min(abs(featuresForFFT[i]) * 100, 255);
  }

  if((score > Bias && pgm_read_byte(&rawData[testN][0]) == 1) || (score < Bias && pgm_read_byte(&rawData[testN][0]) == 0)) 
  correctOutput++;
}

Serial.print(correctOutput*100/20);  
Serial.println("%");
}

void trainAndTest(int featureNum=MAX_FEATURE_NUM, int testSamplesStartingIndex=80){
  for(int _featureNum=2; _featureNum <=64; _featureNum*=2){
    Serial.println();
    Serial.print("For feature number ");
    Serial.println(_featureNum);
  buildDataset(_featureNum);
  train(_featureNum);
  test(_featureNum);
  }
}

void setup() {
  Serial.begin(9600);
  trainAndTest();
}

void loop(){}